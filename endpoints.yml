# This file contains the different endpoints your bot can use.

# Server where the models are pulled from.
# https://rasa.com/docs/rasa/model-storage#fetching-models-from-a-server

#models:
#  url: http://my-server.com/models/default_core@latest
#  wait_time_between_pulls:  10   # [optional](default: 100)

# Server which runs your custom actions.
# https://rasa.com/docs/rasa/custom-actions

action_endpoint:
  url: "http://localhost:5055/webhook"

# Tracker store which is used to store the conversations.
# By default the conversations are stored in memory.
# https://rasa.com/docs/rasa/tracker-stores

#tracker_store:
#    type: redis
#    url: <host of the redis instance, e.g. localhost>
#    port: <port of your redis instance, usually 6379>
#    db: <number of your database within redis, e.g. 0>
#    password: <password used for authentication>
#    use_ssl: <whether or not the communication is encrypted, default false>

#tracker_store:
#    type: mongod
#    url: <url to your mongo instance, e.g. mongodb://localhost:27017>
#    db: <name of the db within your mongo instance, e.g. rasa>
#    username: <username used for authentication>
#    password: <password used for authentication>

# Event broker which all conversation events should be streamed to.
# https://rasa.com/docs/rasa/event-brokers

#event_broker:
#  url: localhost
#  username: username
#  password: password
#  queue: queue

tracker_store:
  type: sql  # other databases are supported
  dialect: "postgresql"
  url: 192.168.168.58
  port: 5432
  username: "admin"
  password: "9TWkV6nVWe9FJcK"
  db: "rasa"


event_broker:
  type: "pika"
  url: 192.168.168.58
  port: 5672  # change if your RabbitMQ service is exposed on a different port
  username: "user"  # if customized, value of the RABBITMQ_USERNAME environment variable
  password: "Fhrw9LYfwBZWb2N"
  queues:
    - "rasa_production_events"  # if using a custom queue, value of the RABBITMQ_QUEUE environment variable